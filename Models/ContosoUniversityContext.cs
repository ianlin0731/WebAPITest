// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WebAPITest.Models;

public partial class ContosoUniversityContext : DbContext
{
    public ContosoUniversityContext(DbContextOptions<ContosoUniversityContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Course> Course { get; set; }

    public virtual DbSet<Department> Department { get; set; }

    public virtual DbSet<Enrollment> Enrollment { get; set; }

    public virtual DbSet<OfficeAssignment> OfficeAssignment { get; set; }

    public virtual DbSet<Person> Person { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Course>(entity =>
        {
            entity.HasKey(e => e.CourseID).HasName("PK_dbo.Course");

            entity.HasIndex(e => e.DepartmentID, "IX_DepartmentID");

            entity.Property(e => e.DepartmentID).HasDefaultValue(1);
            entity.Property(e => e.Title).HasMaxLength(50);

            entity.HasOne(d => d.Department).WithMany(p => p.Course)
                .HasForeignKey(d => d.DepartmentID)
                .HasConstraintName("FK_dbo.Course_dbo.Department_DepartmentID");

            entity.HasMany(d => d.Instructor).WithMany(p => p.Course)
                .UsingEntity<Dictionary<string, object>>(
                    "CourseInstructor",
                    r => r.HasOne<Person>().WithMany()
                        .HasForeignKey("InstructorID")
                        .HasConstraintName("FK_dbo.CourseInstructor_dbo.Instructor_InstructorID"),
                    l => l.HasOne<Course>().WithMany()
                        .HasForeignKey("CourseID")
                        .HasConstraintName("FK_dbo.CourseInstructor_dbo.Course_CourseID"),
                    j =>
                    {
                        j.HasKey("CourseID", "InstructorID").HasName("PK_dbo.CourseInstructor");
                        j.HasIndex(new[] { "CourseID" }, "IX_CourseID");
                        j.HasIndex(new[] { "InstructorID" }, "IX_InstructorID");
                    });
        });

        modelBuilder.Entity<Department>(entity =>
        {
            entity.HasKey(e => e.DepartmentID).HasName("PK_dbo.Department");

            entity.HasIndex(e => e.InstructorID, "IX_InstructorID");

            entity.Property(e => e.Budget).HasColumnType("money");
            entity.Property(e => e.Name).HasMaxLength(50);
            entity.Property(e => e.RowVersion)
                .IsRequired()
                .IsRowVersion()
                .IsConcurrencyToken();
            entity.Property(e => e.StartDate).HasColumnType("datetime");

            entity.HasOne(d => d.Instructor).WithMany(p => p.Department)
                .HasForeignKey(d => d.InstructorID)
                .HasConstraintName("FK_dbo.Department_dbo.Instructor_InstructorID");
        });

        modelBuilder.Entity<Enrollment>(entity =>
        {
            entity.HasKey(e => e.EnrollmentID).HasName("PK_dbo.Enrollment");

            entity.HasIndex(e => e.CourseID, "IX_CourseID");

            entity.HasIndex(e => e.StudentID, "IX_StudentID");

            entity.HasOne(d => d.Course).WithMany(p => p.Enrollment)
                .HasForeignKey(d => d.CourseID)
                .HasConstraintName("FK_dbo.Enrollment_dbo.Course_CourseID");

            entity.HasOne(d => d.Student).WithMany(p => p.Enrollment)
                .HasForeignKey(d => d.StudentID)
                .HasConstraintName("FK_dbo.Enrollment_dbo.Person_StudentID");
        });

        modelBuilder.Entity<OfficeAssignment>(entity =>
        {
            entity.HasKey(e => e.InstructorID).HasName("PK_dbo.OfficeAssignment");

            entity.HasIndex(e => e.InstructorID, "IX_InstructorID");

            entity.Property(e => e.InstructorID).ValueGeneratedNever();
            entity.Property(e => e.Location).HasMaxLength(50);

            entity.HasOne(d => d.Instructor).WithOne(p => p.OfficeAssignment)
                .HasForeignKey<OfficeAssignment>(d => d.InstructorID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dbo.OfficeAssignment_dbo.Instructor_InstructorID");
        });

        modelBuilder.Entity<Person>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK_dbo.Person");

            entity.Property(e => e.Discriminator)
                .IsRequired()
                .HasMaxLength(128)
                .HasDefaultValue("Instructor");
            entity.Property(e => e.EnrollmentDate).HasColumnType("datetime");
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.HireDate).HasColumnType("datetime");
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}